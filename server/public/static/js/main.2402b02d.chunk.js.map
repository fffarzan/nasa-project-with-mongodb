{"version":3,"sources":["hooks/requests.js","hooks/usePlanets.js","components/Centered.js","components/Clickable.js","components/Header/Header.js","pages/Default/Launch/Launch.js","pages/Default/History/History.js","pages/Default/Upcoming/Upcoming.js","pages/Default/Default.js","hooks/useLaunches.js","App.js","index.js"],"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id","props","className","children","rest","onNav","Centered","src","alt","Clickable","onClick","to","selectorBody","useMemo","planets","map","planet","value","keplerName","today","Date","toISOString","split","onSubmit","submitLaunch","htmlFor","type","name","min","max","defaultValue","show","entered","layer","disabled","isPendingLaunch","tableBody","launches","filter","upcoming","style","color","success","launchDate","toDateString","mission","rocket","customers","join","String","tableHeader","abortLaunch","target","useState","setLaunches","setPendingLaunch","getLaunches","useCallback","useEffect","e","preventDefault","data","FormData","get","payload","setTimeout","useLaunches","setPlanets","getPlanets","fetchedPlanets","usePlanets","exact","path","ReactDOM","render","App","document","getElementById"],"mappings":"8SAAMA,EAAU,2B,SAEDC,I,qFAAf,8GACyBC,MAAM,GAAD,OAAIF,EAAJ,aAD9B,cACQG,EADR,yBAESA,EAASC,QAFlB,4C,+BAKeC,I,qFAAf,gHACyBH,MAAM,GAAD,OAAIF,EAAJ,cAD9B,cACQG,EADR,gBAEgCA,EAASC,OAFzC,cAEQE,EAFR,yBAGSA,EAAgBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,aAAeD,EAAEC,YAA7B,KAH9B,4C,+BAMeC,E,wFAAf,WAAgCC,GAAhC,oGAEiBV,MAAM,GAAD,OAAIF,EAAJ,aAAwB,CACxCa,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAL3B,iGAQW,CAAEM,IAAI,IARjB,yD,+BAYeC,E,wFAAf,WAA+BC,GAA/B,oGAEiBlB,MAAM,GAAD,OAAIF,EAAJ,qBAAwBoB,GAAM,CAC9CP,OAAQ,WAHd,iGAMW,CAAEK,IAAI,IANjB,yD,sBCrBe,I,kDCJA,WAAAG,GACb,IAAQC,EAAiCD,EAAjCC,UAAWC,EAAsBF,EAAtBE,SAAaC,EAAhC,YAAyCH,EAAzC,GACA,OACE,6CAAKC,UAAS,UAAKA,IAAiBE,GAApC,aACGD,IAJP,E,eCAe,WAAAF,GACb,IAAQE,EAAsBF,EAAtBE,SAAaC,EAArB,YAA8BH,EAA9B,GAEA,OACE,gDAAUG,GAAV,aACGD,IALP,E,oBCOe,WAAAF,GACb,IAAQI,EAAmBJ,EAAnBI,MAAUD,EAAlB,YAA2BH,EAA3B,GAEA,OACE,iCACE,eAACK,EAAD,2BAAcF,GAAd,IAAoBF,UAAU,eAA9B,UACE,qBACEK,IAAI,eACJC,IAAI,YAEN,qDACA,gCACE,cAACC,EAAD,CACEC,QAASL,EACTH,UAAU,0BAFZ,SAIE,cAAC,IAAD,CAAMS,GAAG,UAAT,sBAKF,cAACF,EAAD,CACEC,QAASL,EACTH,UAAU,0BAFZ,SAIE,cAAC,IAAD,CAAMS,GAAG,YAAT,wBAKF,cAACF,EAAD,CACEC,QAASL,EACTH,UAAU,0BAFZ,SAIE,cAAC,IAAD,CAAMS,GAAG,WAAT,+BAlCZ,ECDe,G,MAAA,SAAAV,GACb,IAAMW,EAAeC,mBAAQ,kCAAMZ,EAAMa,eAAZ,aAAM,EAAeC,KAAI,SAAAC,GAAM,OAC1D,wBAAQC,MAAOD,EAAOE,WAAtB,SAA2DF,EAAOE,YAA3BF,EAAOE,WADY,GAA/B,GAE1B,CAACjB,EAAMa,UAEJK,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAElD,OACE,0BAASpB,UAAU,SAAnB,UACE,mHACA,0IACA,+BACE,6EACA,qHAGF,uBACEqB,SAAUtB,EAAMuB,aAChBtB,UAAU,cAFZ,UAIE,uBAAOuB,QAAQ,aAAf,yBACA,uBACEC,KAAK,OACL1B,GAAG,aACH2B,KAAK,aACLC,IAAKT,EACLU,IAAI,aACJC,aAAcX,IAEhB,uBAAOM,QAAQ,eAAf,0BACA,uBACEC,KAAK,OACL1B,GAAG,eACH2B,KAAK,iBAEP,uBAAOF,QAAQ,cAAf,yBACA,uBACEC,KAAK,OACL1B,GAAG,cACH2B,KAAK,cACLG,aAAa,iBAEf,uBAAOL,QAAQ,mBAAf,mCACA,wBACEzB,GAAG,mBACH2B,KAAK,mBAFP,SAIGf,IAGH,cAACH,EAAD,UACE,wBACEsB,KAAM9B,EAAM+B,QACZN,KAAK,SACLO,MAAM,UACNC,SAAUjC,EAAMkC,gBAJlB,mCAnDV,GCFe,G,MAAA,SAAAlC,GACb,IAAMmC,EAAYvB,mBAAQ,kCAAMZ,EAAMoC,gBAAZ,aAAM,EAAgBC,QAAO,SAAA9C,GAAM,OAAKA,EAAO+C,QAAZ,IAAsBxB,KAAI,SAAAvB,GAAM,aAC3F,+BACE,6BACE,sBAAMgD,MACJ,CAACC,MAAOjD,EAAOkD,QAAU,cAAgB,OAD3C,sBAIF,6BAAKlD,EAAOF,eACZ,6BAAK,IAAI8B,KAAK5B,EAAOmD,YAAYC,iBACjC,6BAAKpD,EAAOqD,UACZ,6BAAKrD,EAAOsD,SACZ,uCAAKtD,EAAOuD,iBAAZ,aAAK,EAAkBC,KAAK,UAVrBC,OAAOzD,EAAOF,cADoE,GAAnE,GAatB,CAACW,EAAMoC,WAELa,EACJ,+BACE,wCACA,qCACA,sCACA,yCACA,wCACA,8CAIJ,OACE,0BAASlD,GAAG,UAAZ,UACE,mHACA,wBAAOE,UAAU,gBAAjB,UACE,gCACGgD,IAEH,gCACGd,SAnCX,GCGe,G,MAAA,SAAAnC,GACb,IAAQoC,EAA0BpC,EAA1BoC,SAAUc,EAAgBlD,EAAhBkD,YAEZf,EAAYvB,mBAAQ,yBAAMwB,QAAN,IAAMA,OAAN,EAAMA,EAAUC,QAAO,SAAA9C,GAAM,OAAIA,EAAO+C,QAAX,IAAqBxB,KAAI,SAAAvB,GAAM,OACpF,+BACE,6BACE,cAACiB,EAAD,CAAW+B,MAAO,CAACC,MAAM,OAAzB,SACE,cAAC,IAAD,CAAM/B,QAAS,kBAAMyC,EAAY3D,EAAOF,aAAzB,EAAf,0BAGJ,6BAAKE,EAAOF,eACZ,6BAAK,IAAI8B,KAAK5B,EAAOmD,YAAYC,iBACjC,6BAAKpD,EAAOqD,UACZ,6BAAKrD,EAAOsD,SACZ,6BAAKtD,EAAO4D,WAVLH,OAAOzD,EAAOF,cAD6D,GAA5D,GAatB,CAAC+C,EAAUc,IAETD,EACJ,gCACE,+BACE,wCACA,qCACA,sCACA,yCACA,wCACA,kDAKN,OACE,0BAASlD,GAAG,WAAZ,UACE,8HACA,uFACA,wBAAOE,UAAU,gBAAjB,UACKgD,EACH,gCACGd,SAtCX,GCOe,G,MAAA,WACb,MCXa,WACb,MAAgCiB,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiBiB,EAAjB,KACA,EAA4CD,oBAAS,GAArD,mBAAOlB,EAAP,KAAwBoB,EAAxB,KAEMC,EAAcC,sBAAW,gCAAC,8GACAxE,IADA,OACxBC,EADwB,OAE9BoE,EAAYpE,GAFkB,2CAG7B,IAEHwE,qBAAU,WACRF,GACD,GAAE,CAACA,IAEJ,IAAMhC,EAAeiC,sBAAW,iDAAC,WAAOE,GAAP,kGAC/BA,EAAEC,iBACFL,GAAiB,GACXM,EAAO,IAAIC,SAASH,EAAEP,QACtBT,EAAa,IAAIvB,KAAKyC,EAAKE,IAAI,eAC/BlB,EAAUgB,EAAKE,IAAI,gBACnBjB,EAASe,EAAKE,IAAI,eAClBX,EAASS,EAAKE,IAAI,oBAClBC,EAAU,CAAE1E,aAAc,IAAKqD,aAAYE,UAASC,SAAQM,UARnC,UASR7D,EAAiByE,GATT,eAUJlE,KAEzB0D,IACAS,YAAW,WACTV,GAAiB,EAClB,GAAE,MAf0B,4CAAD,sDAiB7B,CAACC,IAEEL,EAAcM,sBAAW,iDAAC,WAAOzD,GAAP,2FACPD,EAAgBC,GADT,cAEHF,IAEzB0D,IAJ4B,2CAAD,sDAM5B,CAACA,IAEJ,MAAO,CACLnB,WACAF,kBACAX,eACA2B,cA5CJ,CDWmEe,GAAzD7B,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,gBAAiBX,EAAnC,EAAmCA,aAAc2B,EAAjD,EAAiDA,YAC3CrC,EPZO,WACb,MAA8BuC,mBAAS,IAAvC,mBAAOvC,EAAP,KAAgBqD,EAAhB,KAEMC,EAAaX,sBAAW,gCAAC,8GACA5E,IADA,OACvBwF,EADuB,OAE7BF,EAAWE,GAFkB,2CAG5B,IAMH,OAJAX,qBAAU,WACRU,GACD,GAAE,CAACA,IAEGtD,CAZT,COYkBwD,GAEhB,OACE,gCACE,cAAC,EAAD,IAEA,cAAChE,EAAD,CAAUJ,UAAU,OAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACE1D,QAASA,EACTU,aAAcA,EACdW,gBAAiBA,MAIrB,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,CACE1D,QAASA,EACTU,aAAcA,EACdW,gBAAiBA,MAIrB,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,CACEnC,SAAUA,EACVc,YAAaA,MAIjB,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CACEnC,SAAUA,aAnCxB,GEVe,aACb,OACE,cAAC,IAAD,UACE,cAAC,EAAD,KAHN,E,MCCAoC,IAASC,OACP,cAACC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.2402b02d.chunk.js","sourcesContent":["const API_URL = 'http://localhost:8000/v1';\n\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return response.json();\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => a.flightNumber - b.flightNumber);\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(launch)\n    });\n  } catch (error) {\n    return { ok: false };\n  }\n}\n\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: 'DELETE'\n    });\n  } catch (error) {\n    return { ok: false };\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};","import { useCallback, useEffect, useState } from \"react\";\n\nimport { httpGetPlanets } from \"./requests\";\n\nexport default () => {\n  const [planets, setPlanets] = useState([]);\n\n  const getPlanets = useCallback(async () => {\n    const fetchedPlanets = await httpGetPlanets();\n    setPlanets(fetchedPlanets);\n  }, []);\n\n  useEffect(() => {\n    getPlanets();\n  }, [getPlanets]);\n\n  return planets;\n}\n","export default props => {\n  const { className, children, ...rest } = props;\n  return (\n    <div className={`${className}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n","export default props => {\n  const { children, ...rest } = props;\n\n  return (\n    <span {...rest}>\n      {children}\n    </span>\n  );\n};\n","import { Link } from \"react-router-dom\";\n\nimport Clickable from \"../Clickable\";\nimport Centered from \"../Centered\";\n\nimport './Header.css';\n\nexport default props => {\n  const { onNav, ...rest } = props;\n  \n  return ( \n    <header>\n      <Centered {...rest} className=\"header-inner\">\n        <img \n          src=\"/favicon.png\" \n          alt=\"favicon\"\n        />\n        <p>NASA Mission Control</p>\n        <nav>\n          <Clickable \n            onClick={onNav} \n            className=\"header-nav-link-warpper\"  \n          >\n            <Link to=\"/launch\">\n              Launch\n            </Link>\n          </Clickable>\n\n          <Clickable \n            onClick={onNav} \n            className=\"header-nav-link-warpper\"\n          >\n            <Link to=\"/upcoming\">\n              Upcoming\n            </Link>\n          </Clickable>\n          \n          <Clickable \n            onClick={onNav} \n            className=\"header-nav-link-warpper\"\n          >\n            <Link to=\"/history\">\n              History\n            </Link>\n          </Clickable>\n        </nav>\n      </Centered>\n    </header>\n  );\n};\n","import { useMemo } from \"react\";\n\nimport Clickable from \"../../../components/Clickable\";\n\nimport './Launch.css';\n\nexport default props => {\n  const selectorBody = useMemo(() => props.planets?.map(planet => \n    <option value={planet.keplerName} key={planet.keplerName}>{planet.keplerName}</option>\n  ), [props.planets]);\n\n  const today = new Date().toISOString().split(\"T\")[0];\n\n  return (\n    <section className=\"launch\">\n      <p>Schedule a mission launch for interstellar travel to one of the Kepler Exoplanets.</p>\n      <p>Only confirmed planets matching the following criteria are available for the earliest scheduled missions:</p>\n      <ul>\n        <li>Planetary radius &lt; 1.6 times Earth's radius</li>\n        <li>Effective stellar flux &gt; 0.36 times Earth's value and &lt; 1.11 times Earth's value</li>\n      </ul>\n\n      <form \n        onSubmit={props.submitLaunch}\n        className=\"launch-form\"\n      >\n        <label htmlFor=\"launch-day\">Launch Date</label>\n        <input \n          type=\"date\"\n          id=\"launch-day\" \n          name=\"launch-day\" \n          min={today} \n          max=\"2040-12-31\"\n          defaultValue={today}\n        />\n        <label htmlFor=\"mission-name\">Mission Name</label>\n        <input \n          type=\"text\" \n          id=\"mission-name\" \n          name=\"mission-name\" \n        />\n        <label htmlFor=\"rocket-name\">Rocket Type</label>\n        <input \n          type=\"text\" \n          id=\"rocket-name\" \n          name=\"rocket-name\" \n          defaultValue=\"Explorer IS1\" \n        />\n        <label htmlFor=\"planets-selector\">Destination Exoplanet</label>\n        <select \n          id=\"planets-selector\" \n          name=\"planets-selector\"\n        >\n          {selectorBody}\n        </select>\n        \n        <Clickable>\n          <button \n            show={props.entered} \n            type=\"submit\" \n            layer=\"success\" \n            disabled={props.isPendingLaunch}>\n            Launch Mission\n          </button>\n        </Clickable>\n      </form>\n    </section>\n  );\n};\n","import { useMemo } from \"react\";\n\nimport './History.css';\n\nexport default props => {\n  const tableBody = useMemo(() => props.launches?.filter(launch => !launch.upcoming).map(launch => (\n    <tr key={String(launch.flightNumber)}>\n      <td>\n        <span style={\n          {color: launch.success ? \"greenyellow\" : \"red\"}\n        }>█</span>\n      </td>\n      <td>{launch.flightNumber}</td>\n      <td>{new Date(launch.launchDate).toDateString()}</td>\n      <td>{launch.mission}</td>\n      <td>{launch.rocket}</td>\n      <td>{launch.customers?.join(\", \")}</td>\n    </tr>\n  )), [props.launches]);\n\n  const tableHeader = ( \n    <tr>\n      <th>Status</th>\n      <th>No.</th>\n      <th>Date</th>\n      <th>Mission</th>\n      <th>Rocket</th>\n      <th>Customers</th>\n    </tr>\n  );\n\n  return (\n    <article id=\"history\">\n      <p>History of mission launches including SpaceX launches starting from the year 2006.</p>\n      <table className=\"history-table\">\n        <thead>\n          {tableHeader}\n        </thead>\n        <tbody>\n          {tableBody}\n        </tbody>\n      </table>\n    </article>\n  );\n}\n","import { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Clickable from \"../../../components/Clickable\";\n\nimport './Upcoming.css';\n\nexport default props => {\n  const { launches, abortLaunch } = props;\n\n  const tableBody = useMemo(() => launches?.filter(launch => launch.upcoming).map(launch => (\n    <tr key={String(launch.flightNumber)}>\n      <td>\n        <Clickable style={{color:\"red\"}}>\n          <Link onClick={() => abortLaunch(launch.flightNumber)}> ✖ </Link>\n        </Clickable>\n      </td>\n      <td>{launch.flightNumber}</td>\n      <td>{new Date(launch.launchDate).toDateString()}</td>\n      <td>{launch.mission}</td>\n      <td>{launch.rocket}</td>\n      <td>{launch.target}</td>\n    </tr>\n  )), [launches, abortLaunch]);\n\n  const tableHeader = (\n    <thead>\n      <tr>\n        <th>Action</th>\n        <th>No.</th>\n        <th>Date</th>\n        <th>Mission</th>\n        <th>Rocket</th>\n        <th>Destination</th>\n      </tr>\n    </thead>\n  );\n\n  return (\n    <section id=\"upcoming\">\n      <p>Upcoming missions including both SpaceX launches and newly scheduled Zero to Mastery rockets.</p>\n      <span>Warning! Clicking on the ✖ aborts the mission.</span>\n      <table className=\"history-table\">\n          {tableHeader}\n        <tbody>\n          {tableBody}\n        </tbody>\n      </table>\n    </section>\n  );\n}","import { Switch, Route } from \"react-router-dom\";\n\nimport usePlanets from \"../../hooks/usePlanets\";\nimport useLaunches from \"../../hooks/useLaunches\";\n\nimport Centered from \"../../components/Centered\";\nimport Header from \"../../components/Header/Header\";\n\nimport Launch from \"./Launch/Launch\";\nimport History from \"./History/History\";\nimport Upcoming from \"./Upcoming/Upcoming\";\n\nimport './Default.css';\n\nexport default () => {\n  const { launches, isPendingLaunch, submitLaunch, abortLaunch } = useLaunches();\n  const planets = usePlanets();\n  \n  return (\n    <div>\n      <Header />\n      \n      <Centered className=\"page\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Launch \n              planets={planets}\n              submitLaunch={submitLaunch}\n              isPendingLaunch={isPendingLaunch} \n            />\n          </Route>\n\n          <Route exact path=\"/launch\">\n            <Launch\n              planets={planets}\n              submitLaunch={submitLaunch}\n              isPendingLaunch={isPendingLaunch} \n            />\n          </Route>\n\n          <Route exact path=\"/upcoming\">\n            <Upcoming\n              launches={launches}\n              abortLaunch={abortLaunch} \n            />\n          </Route>\n\n          <Route exact path=\"/history\">\n            <History \n              launches={launches} \n            />\n          </Route>\n        </Switch>\n      </Centered>\n    </div>\n  );\n};","import { useCallback, useEffect, useState } from \"react\";\n\nimport { httpGetLaunches, httpSubmitLaunch, httpAbortLaunch } from './requests';\n\nexport default () => {\n  const [launches, setLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    setLaunches(fetchedLaunches);\n  }, []);\n\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n\n  const submitLaunch = useCallback(async (e) => {\n    e.preventDefault();\n    setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get(\"launch-day\"));\n    const mission = data.get(\"mission-name\");\n    const rocket = data.get(\"rocket-name\");\n    const target = data.get(\"planets-selector\");\n    const payload = { flightNumber: 105, launchDate, mission, rocket, target }\n    const response = await httpSubmitLaunch(payload);\n    const isSuccess = response.ok;\n    if (isSuccess) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n      }, 800);\n    }\n  }, [getLaunches]);\n\n  const abortLaunch = useCallback(async (id) => {\n    const response = await httpAbortLaunch(id);\n    const isSuccess = response.ok;\n    if (isSuccess) {\n      getLaunches();\n    }\n  }, [getLaunches]);\n\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch,\n  };\n}","import { BrowserRouter } from \"react-router-dom\";\n\nimport Default from \"./pages/Default/Default\";\n\nexport default () => {\n  return (\n    <BrowserRouter>\n      <Default />\n    </BrowserRouter>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}